import unittest
import utils

class TestUtils(unittest.TestCase):
  def test_scoreIndicator(self):
    self.assertEqual(utils.scoreIndicator(-1.0), "游린游린游린游린游린")
    self.assertEqual(utils.scoreIndicator(-0.9), "游린游린游린游린游릲")
    self.assertEqual(utils.scoreIndicator(-0.8), "游린游린游린游린")
    self.assertEqual(utils.scoreIndicator(-0.7), "游린游린游린游릲")
    self.assertEqual(utils.scoreIndicator(-0.6), "游린游린游린")
    self.assertEqual(utils.scoreIndicator(-0.5), "游린游린游릲")
    self.assertEqual(utils.scoreIndicator(-0.4), "游린游린")
    self.assertEqual(utils.scoreIndicator(-0.3), "游린游릲")
    self.assertEqual(utils.scoreIndicator(-0.2), "游린")
    self.assertEqual(utils.scoreIndicator(-0.1), "游릲")
    self.assertEqual(utils.scoreIndicator(0.0), "")
    self.assertEqual(utils.scoreIndicator(0.1), "游릳")
    self.assertEqual(utils.scoreIndicator(0.2), "游릴")
    self.assertEqual(utils.scoreIndicator(0.3), "游릴游릳")
    self.assertEqual(utils.scoreIndicator(0.4), "游릴游릴")
    self.assertEqual(utils.scoreIndicator(0.5), "游릴游릴游릳")
    self.assertEqual(utils.scoreIndicator(0.6), "游릴游릴游릴")
    self.assertEqual(utils.scoreIndicator(0.7), "游릴游릴游릴游릳")
    self.assertEqual(utils.scoreIndicator(0.8), "游릴游릴游릴游릴")
    self.assertEqual(utils.scoreIndicator(0.9), "游릴游릴游릴游릴游릳")
    self.assertEqual(utils.scoreIndicator(1.0), "游릴游릴游릴游릴游릴")

if __name__ == "__main__":
  unittest.main()